/** @format */
import React, { useState, useEffect } from "react";
import ReactCardFlip from "react-card-flip";
import "./CenterBlock.css";
import FullInfoModal from "./FullInfoModal"; // ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ

function CenterBlock() {
  const [isFlipped, setIsFlipped] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isFullInfoOpen, setIsFullInfoOpen] = useState(false); // ‚úÖ –°—Ç–µ–π—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [timeLeft, setTimeLeft] = useState(180);

  useEffect(() => {
    let timer;
    if (isFlipped) {
      timer = setInterval(() => {
        setTimeLeft((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));
      }, 1000);
    } else {
      setTimeLeft(180);
    }
    return () => clearInterval(timer);
  }, [isFlipped]);

  return (
    <>
      <ReactCardFlip isFlipped={isFlipped} flipDirection='horizontal'>
        <div className='center-block' onClick={() => setIsFlipped(true)}>
          <p className='center-block-text'>
            <span>–í—ñ–π—Å—å–∫–æ–≤–æ-</span>
            <span>–æ–±–ª—ñ–∫–æ–≤–∏–π</span>
            <span>–¥–æ–∫—É–º–µ–Ω—Ç</span>
          </p>

          <div className='birth-info'>
            <span className='birth-label'>–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:</span>
            <span className='birth-date'>21.05.1995</span>
          </div>

          <div className='postponement-info'>
            <span className='postponement-label'>–í—ñ–¥—Å—Ç—Ä–æ—á–∫–∞ –¥–æ:</span>
            <span className='postponement-date'>14.08.2025</span>
          </div>

          <div className='marquee-container'>
            <div className='marquee-text'>
              <span>–ù–∞ –æ–±–ª—ñ–∫—É ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ 11:55 | 16.04.2025</span>
              <span>–ù–∞ –æ–±–ª—ñ–∫—É ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ 11:55 | 16.04.2025</span>
              <span>–ù–∞ –æ–±–ª—ñ–∫—É ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ 11:55 | 16.04.2025</span>
              <span>–ù–∞ –æ–±–ª—ñ–∫—É ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ 11:55 | 16.04.2025</span>
              <span>–ù–∞ –æ–±–ª—ñ–∫—É ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ 11:55 | 16.04.2025</span>
              <span>–ù–∞ –æ–±–ª—ñ–∫—É ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ 11:55 | 16.04.2025</span>
            </div>
          </div>

          <div className='military-status'>–í—ñ–π—Å—å–∫–æ–≤–æ–∑–æ–±–æ–≤'—è–∑–∞–Ω–∏–π</div>

          <div className='fio-container'>
            <div className='fio'>
              <span className='fio-item'>–ë–û–ù–î–ê–†</span>
              <span className='fio-item'>–ú–∏–∫–∏—Ç–∞</span>
              <span className='fio-item'>–Ü–≥–æ—Ä–æ–≤–∏—á</span>
            </div>

            <button
              className='menu-button'
              onClick={(e) => {
                e.stopPropagation();
                setIsModalOpen(true);
              }}>
              <span className='dots'>‚Ä¢ ‚Ä¢ ‚Ä¢</span>
            </button>
          </div>

          <img
            src='https://i.ibb.co/KjQ9TBy1/rzlg.png'
            alt='–õ–æ–≥–æ—Ç–∏–ø'
            className='center-block-logo'
          />
        </div>

        <div
          className='center-block back-side'
          onClick={() => setIsFlipped(false)}>
          <p className='scan-subtitle'>–ö–æ–¥ –¥—ñ–π—Å–Ω–∏–π –¥–æ 08.05.2025</p>
          <img
            src='https://i.ibb.co/svLj2v7H/123.jpg'
            alt='QR Scanner'
            className='scan-image'
          />
        </div>
      </ReactCardFlip>

      {/* ‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏ */}
      <div
        className={`flip-modal-overlay ${isModalOpen ? "open" : ""}`}
        onClick={() => setIsModalOpen(false)}>
        <div
          className='flip-modal-content'
          onClick={(e) => e.stopPropagation()}>
          <div className='flip-modal-drag-handle'></div>

          <button
            className='flip-modal-item'
            onClick={() => {
              setIsModalOpen(false); // ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ä–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
              setIsFullInfoOpen(true); // ‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ
            }}>
            <img
              src='https://img.icons8.com/?size=100&id=14093&format=png&color=000000'
              alt='–ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'
              className='flip-modal-icon'
            />
            –ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
          </button>

          <button className='flip-modal-item'>
            <img
              src='https://i.ibb.co/fYdPxsVM/free-icon-document-3936484.png'
              alt='–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF'
              className='flip-modal-icon'
            />
            –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF
          </button>

          <button className='flip-modal-item'>
            <img
              src='https://i.ibb.co/yBGYLDch/free-icon-refresh-2691608.png'
              alt='–û–Ω–æ–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç'
              className='flip-modal-icon'
            />
            –û–Ω–æ–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç
          </button>

          {/* üîΩ –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ üîΩ */}
          <button className='flip-modal-item'>
            <img
              src='https://i.ibb.co/nqRFr8Gh/free-icon-add-doc-17813624.png'
              alt='–ü–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥—Å—Ç—Ä–æ—á–∫—É'
              className='flip-modal-icon'
            />
            –ü–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥—Å—Ç—Ä–æ—á–∫—É
          </button>

          <button className='flip-modal-item'>
            <img
              src='https://i.ibb.co/rfFV3yqp/free-icon-plus-16901820.png'
              alt='–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≤–ª–∫ '
              className='flip-modal-icon'
            />
            –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≤–ª–∫
          </button>

          <button className='flip-modal-item'>
            <img
              src='https://i.ibb.co/v51HXd0/free-icon-write-6604540.png'
              alt='–£—Ç–æ—á–Ω–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ'
              className='flip-modal-icon'
            />
            –£—Ç–æ—á–Ω–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ
          </button>
        </div>
      </div>

      {/* ‚úÖ –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      <FullInfoModal
        isOpen={isFullInfoOpen}
        onClose={() => setIsFullInfoOpen(false)}
      />
    </>
  );
}

export default CenterBlock;
